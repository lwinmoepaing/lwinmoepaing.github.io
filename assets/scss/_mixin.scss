// ==============================================================================
// All BreakPoints
// ==============================================================================

@mixin for-size($size) {
	@if $size == phone-only {
		@media (max-width: $phone-only) {
			@content;
		}
	} @else if $size == tablet-portrait-up {
		@media (min-width: $tablet-portrait-up) {
			@content;
		}
	} @else if $size == tablet-landscape-up {
		@media (min-width: $tablet-landscape-up) {
			@content;
		}
	} @else if $size == desktop-up {
		@media (min-width: $desktop-up) {
			@content;
		}
	} @else if $size == big-desktop-up {
		@media (min-width: $big-desktop-up) {
			@content;
		}
	}
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (eot: "?", svg: "#" + str-replace($name, " ", "_"));

	$formats: (otf: "opentype", ttf: "truetype");

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

// transform
@mixin transform($properties) {
	transform: $properties;
	-webkit-transform: $properties;
	-o-transform: $properties;
	-moz-transform: $properties;
}

// keyframes
@mixin keyframes($name) {
	@keyframes #{$name} {
		@content;
	}
	@-webkit-keyframes #{$name} {
		@content;
	}
}

// transition
@mixin transition($properties) {
	transition: $properties;
	-webkit-transition: $properties;
	-o-transition: $properties;
	-moz-transition: $properties;
}
